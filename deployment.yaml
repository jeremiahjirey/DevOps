apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask
spec:
  replicas: 2
  selector:
    matchLabels:
      app: flask-app
  template:
    metadata:
      labels:
        app: flask-app
    spec:
      containers:
        - name: flask
          image: 767398040510.dkr.ecr.us-east-1.amazonaws.com/techno-repository:7e23b35da444d1c70122c71f0169b6c8f24a0947
          ports:
            - containerPort: 2000
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: AWS_ACCESS_KEY_ID

            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: AWS_SECRET_ACCESS_KEY

            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: AWS_SESSION_TOKEN

            - name: AWS_REGION
              value: "us-east-1"

            - name: API_GATEWAY_URL
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: API_GATEWAY_URL
            
            - name: S3_STAGING_DIR
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: S3_STAGING_DIR

            - name: SNS_TOPIC_ARN
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: SNS_TOPIC_ARN

            - name: FLASK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: FLASK_SECRET_KEY

            - name: ATHENA_DB
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: ATHENA_DB

            - name: ATHENA_SCHEMA_NAME
              valueFrom:
                secretKeyRef:
                  name: pod-secret
                  key: ATHENA_SCHEMA_NAME

          

           

           
            
---
apiVersion: v1
kind: Service
metadata:
  name: flask-app-service
spec:
  selector:
    app: flask-app
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
  type: LoadBalancer